name: builds

env:
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ${{ github.ref }}

jobs:
  linux-build:
    name: Linux/Ubuntu build
    runs-on: ubuntu-latest
    env:
      VERSION: v1
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Bootstrap VCPKG
        run: ./modules/csound/vcpkg/bootstrap-vcpkg.sh

      - name: Update minor version
        id: tag
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DRY_RUN: true
          RELEASE_BRANCHES: none

      - uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 6

      - name: Build godot-csound (Debug)
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/nonameentername/godot-csound-ubuntu:${{ env.VERSION }}
          options: -v ${{ github.workspace }}:${{ github.workspace }} --workdir ${{ github.workspace }} -e BUILD_SHA -e TAG_VERSION
          run: |
            ./platform/ubuntu/build_debug.sh
        env:
          BUILD_SHA: ${{ steps.short-sha.outputs.sha }}
          TAG_VERSION: ${{ steps.tag.outputs.new_tag }}

      - name: Build godot-csound (Release)
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/nonameentername/godot-csound-ubuntu:${{ env.VERSION }}
          options: -v ${{ github.workspace }}:${{ github.workspace }} --workdir ${{ github.workspace }} -e BUILD_SHA -e TAG_VERSION
          run: |
            ./platform/ubuntu/build_release.sh
        env:
          BUILD_SHA: ${{ steps.short-sha.outputs.sha }}
          TAG_VERSION: ${{ steps.tag.outputs.new_tag }}

      - name: Create cache for build
        uses: actions/cache@v4
        with:
          path: addons/csound/bin
          key: linux-artifacts-${{github.run_id}}

  windows-build:
    name: Windows build
    runs-on: ubuntu-latest
    env:
      VERSION: v1
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Bootstrap VCPKG
        run: ./modules/csound/vcpkg/bootstrap-vcpkg.sh

      - name: Update minor version
        id: tag
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DRY_RUN: true
          RELEASE_BRANCHES: none

      - uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 6

      - name: Build godot-csound (Debug)
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/nonameentername/godot-csound-mingw:${{ env.VERSION }}
          options: -v ${{ github.workspace }}:${{ github.workspace }} --workdir ${{ github.workspace }} -e BUILD_SHA -e TAG_VERSION
          run: |
            ./platform/mingw/build_debug.sh
        env:
          BUILD_SHA: ${{ steps.short-sha.outputs.sha }}
          TAG_VERSION: ${{ steps.tag.outputs.new_tag }}

      - name: Build godot-csound (Release)
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/nonameentername/godot-csound-mingw:${{ env.VERSION }}
          options: -v ${{ github.workspace }}:${{ github.workspace }} --workdir ${{ github.workspace }} -e BUILD_SHA -e TAG_VERSION
          run: |
            ./platform/mingw/build_release.sh
        env:
          BUILD_SHA: ${{ steps.short-sha.outputs.sha }}
          TAG_VERSION: ${{ steps.tag.outputs.new_tag }}

      - name: Create cache for build
        uses: actions/cache@v4
        with:
          path: addons/csound/bin
          key: windows-artifacts-${{github.run_id}}
          enableCrossOsArchive: true

  macos-build-deps:
    name: MacOS build deps
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [debug, release]
        arch: [arm64, x86_64]
    env:
      VERSION: v1
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Bootstrap VCPKG
        run: ./modules/csound/vcpkg/bootstrap-vcpkg.sh

      - name: Build csound
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/nonameentername/godot-csound-osxcross:${{ env.VERSION }}
          options: -v ${{ github.workspace }}:${{ github.workspace }} --workdir ${{ github.workspace }}
          run: |
            ARCH=${{ matrix.arch }} ./platform/osxcross/build_deps_${{ matrix.environment }}.sh

      - name: Create cache for build
        uses: actions/cache@v4
        with:
          path: |
            modules/csound/bin
            modules/csound/build
          key: macos-deps-artifacts-${{ matrix.environment }}-${{ matrix.arch }}-${{github.run_id}}

  macos-build:
    name: MacOS build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [debug, release]
    needs: [macos-build-deps]
    env:
      VERSION: v1
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Bootstrap VCPKG
        run: ./modules/csound/vcpkg/bootstrap-vcpkg.sh

      - name: Update minor version
        id: tag
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DRY_RUN: true
          RELEASE_BRANCHES: none

      - uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 6

      - name: Restore cached MacOS artifacts (arm64)
        uses: actions/cache/restore@v4
        with:
          path: |
            modules/csound/bin
            modules/csound/build
          key: macos-deps-artifacts-${{ matrix.environment }}-arm64-${{github.run_id}}

      - name: Restore cached MacOS artifacts (x86_64)
        uses: actions/cache/restore@v4
        with:
          path: |
            modules/csound/bin
            modules/csound/build
          key: macos-deps-artifacts-${{ matrix.environment }}-x86_64-${{github.run_id}}

      - name: Build godot-csound
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/nonameentername/godot-csound-osxcross:${{ env.VERSION }}
          options: -v ${{ github.workspace }}:${{ github.workspace }} --workdir ${{ github.workspace }} -e BUILD_SHA -e TAG_VERSION
          run: |
            ./platform/osxcross/build_lib_${{ matrix.environment }}.sh
        env:
          BUILD_SHA: ${{ steps.short-sha.outputs.sha }}
          TAG_VERSION: ${{ steps.tag.outputs.new_tag }}

      - name: Create cache for build
        uses: actions/cache@v4
        with:
          path: addons/csound/bin
          key: macos-artifacts-${{ matrix.environment }}-${{github.run_id}}

  ios-build-deps:
    name: iOS build deps
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [debug, release]
        arch: [arm64, arm64_sim, x86_64_sim]
    env:
      VERSION: v1
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Bootstrap VCPKG
        run: ./modules/csound/vcpkg/bootstrap-vcpkg.sh

      - name: Build csound
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/nonameentername/godot-csound-ioscross:${{ env.VERSION }}
          options: -v ${{ github.workspace }}:${{ github.workspace }} --workdir ${{ github.workspace }}
          run: |
            ARCH=${{ matrix.arch }} ./platform/ioscross/build_deps_${{ matrix.environment }}.sh

      - name: Create cache for build
        uses: actions/cache@v4
        with:
          path: |
            modules/csound/bin
            modules/csound/build
          key: ios-deps-artifacts-${{ matrix.environment }}-${{ matrix.arch }}-${{github.run_id}}

  ios-build:
    name: iOS build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [debug, release]
    needs: [ios-build-deps]
    env:
      VERSION: v1
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Bootstrap VCPKG
        run: ./modules/csound/vcpkg/bootstrap-vcpkg.sh

      - name: Update minor version
        id: tag
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DRY_RUN: true
          RELEASE_BRANCHES: none

      - uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 6

      - name: Restore cached iOS artifacts (arm64)
        uses: actions/cache/restore@v4
        with:
          path: |
            modules/csound/bin
            modules/csound/build
          key: ios-deps-artifacts-${{ matrix.environment }}-arm64-${{github.run_id}}

      - name: Restore cached iOS artifacts (arm64_sim)
        uses: actions/cache/restore@v4
        with:
          path: |
            modules/csound/bin
            modules/csound/build
          key: ios-deps-artifacts-${{ matrix.environment }}-arm64_sim-${{github.run_id}}

      - name: Restore cached iOS artifacts (x86_64_sim)
        uses: actions/cache/restore@v4
        with:
          path: |
            modules/csound/bin
            modules/csound/build
          key: ios-deps-artifacts-${{ matrix.environment }}-x86_64_sim-${{github.run_id}}

      - name: Build godot-csound
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/nonameentername/godot-csound-ioscross:${{ env.VERSION }}
          options: -v ${{ github.workspace }}:${{ github.workspace }} --workdir ${{ github.workspace }} -e BUILD_SHA -e TAG_VERSION
          run: |
            ./platform/ioscross/build_lib_${{ matrix.environment }}.sh
        env:
          BUILD_SHA: ${{ steps.short-sha.outputs.sha }}
          TAG_VERSION: ${{ steps.tag.outputs.new_tag }}

      - name: Create cache for build
        uses: actions/cache@v4
        with:
          path: addons/csound/bin
          key: ios-artifacts-${{ matrix.environment }}-${{github.run_id}}

  android-build:
    name: Android build
    runs-on: ubuntu-latest
    env:
      VERSION: v1
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Bootstrap VCPKG
        run: ./modules/csound/vcpkg/bootstrap-vcpkg.sh

      - name: Update minor version
        id: tag
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DRY_RUN: true
          RELEASE_BRANCHES: none

      - uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 6

      - name: Build godot-csound (Debug)
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/nonameentername/godot-csound-android:${{ env.VERSION }}
          options: -v ${{ github.workspace }}:${{ github.workspace }} --workdir ${{ github.workspace }} -e BUILD_SHA -e TAG_VERSION
          run: |
            ./platform/android/build_debug.sh
        env:
          BUILD_SHA: ${{ steps.short-sha.outputs.sha }}
          TAG_VERSION: ${{ steps.tag.outputs.new_tag }}

      - name: Build godot-csound (Release)
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/nonameentername/godot-csound-android:${{ env.VERSION }}
          options: -v ${{ github.workspace }}:${{ github.workspace }} --workdir ${{ github.workspace }} -e BUILD_SHA -e TAG_VERSION
          run: |
            ./platform/android/build_release.sh
        env:
          BUILD_SHA: ${{ steps.short-sha.outputs.sha }}
          TAG_VERSION: ${{ steps.tag.outputs.new_tag }}

      - name: Create cache for build
        uses: actions/cache@v4
        with:
          path: addons/csound/bin
          key: android-artifacts-${{github.run_id}}

  web-build:
    name: Web build
    runs-on: ubuntu-latest
    env:
      VERSION: v1
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Bootstrap VCPKG
        run: ./modules/csound/vcpkg/bootstrap-vcpkg.sh

      - name: Update minor version
        id: tag
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DRY_RUN: true
          RELEASE_BRANCHES: none

      - uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 6

      - name: Build godot-csound (Debug)
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/nonameentername/godot-csound-wasm:${{ env.VERSION }}
          options: -v ${{ github.workspace }}:${{ github.workspace }} --workdir ${{ github.workspace }} -e BUILD_SHA -e TAG_VERSION
          run: |
            ./platform/web/build_debug.sh
        env:
          BUILD_SHA: ${{ steps.short-sha.outputs.sha }}
          TAG_VERSION: ${{ steps.tag.outputs.new_tag }}

      - name: Build godot-csound (Release)
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/nonameentername/godot-csound-wasm:${{ env.VERSION }}
          options: -v ${{ github.workspace }}:${{ github.workspace }} --workdir ${{ github.workspace }} -e BUILD_SHA -e TAG_VERSION
          run: |
            ./platform/web/build_release.sh
        env:
          BUILD_SHA: ${{ steps.short-sha.outputs.sha }}
          TAG_VERSION: ${{ steps.tag.outputs.new_tag }}

      - name: Create cache for build
        uses: actions/cache@v4
        with:
          path: addons/csound/bin
          key: web-artifacts-${{github.run_id}}

  verify-linux-build:
    name: Verify Linux/Ubuntu build
    runs-on: ubuntu-latest
    needs: linux-build
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Restore cached Linux artifacts
        uses: actions/cache/restore@v4
        with:
          path: addons/csound/bin
          key: linux-artifacts-${{github.run_id}}

      - name: Setup Godot
        uses: chickensoft-games/setup-godot@v2
        with:
          version: 4.5.0
          use-dotnet: false
          include-templates: false

      - name: Godot import
        continue-on-error: true
        run: |
          godot --headless --import

      - name: Verify godot-csound
        run: |
          godot --headless -s csound_run_scene.gd --quit-after 300 2> /dev/null | grep 'output result is 4'

  verify-macos-build:
    name: Verify MacOS build
    runs-on: macos-latest
    needs: macos-build
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Restore cached MacOS artifacts (debug)
        uses: actions/cache/restore@v4
        with:
          path: addons/csound/bin
          key: macos-artifacts-debug-${{github.run_id}}

      - name: Restore cached MacOS artifacts (release)
        uses: actions/cache/restore@v4
        with:
          path: addons/csound/bin
          key: macos-artifacts-release-${{github.run_id}}

      - name: Setup Godot
        uses: chickensoft-games/setup-godot@v2
        with:
          version: 4.5.0
          use-dotnet: false
          include-templates: false

      - name: Godot import
        continue-on-error: true
        run: |
          godot --headless --import

      - name: Verify godot-csound
        run: |
          godot --headless -s csound_run_scene.gd --quit-after 300 2> /dev/null | grep 'output result is 4'

  verify-windows-build:
    name: Verify Windows build
    runs-on: windows-latest
    needs: windows-build
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Restore cached Windows artifacts
        uses: actions/cache/restore@v4
        with:
          path: addons/csound/bin
          key: windows-artifacts-${{github.run_id}}
          enableCrossOsArchive: true

      - name: Setup Godot
        uses: chickensoft-games/setup-godot@v2
        with:
          version: 4.5.0
          use-dotnet: false
          include-templates: false

      - name: Godot import
        continue-on-error: true
        run: |
          godot --headless --import

      - name: Verify godot-csound
        run: |
          godot --headless -s csound_run_scene.gd --quit-after 300 2> NUL | grep 'output result is 4'

  publish_artifacts:
    if: ${{ github.ref == 'refs/heads/main' }}
    name: Publish Artifacts
    runs-on: ubuntu-latest
    needs: [verify-linux-build, verify-windows-build, verify-macos-build, ios-build, android-build, web-build]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Restore cached Linux artifacts
        uses: actions/cache/restore@v4
        with:
          path: addons/csound/bin
          key: linux-artifacts-${{github.run_id}}

      - name: Restore cached Windows artifacts
        uses: actions/cache/restore@v4
        with:
          path: addons/csound/bin
          key: windows-artifacts-${{github.run_id}}
          enableCrossOsArchive: true

      - name: Restore cached MacOS artifacts (debug)
        uses: actions/cache/restore@v4
        with:
          path: addons/csound/bin
          key: macos-artifacts-debug-${{github.run_id}}

      - name: Restore cached MacOS artifacts (release)
        uses: actions/cache/restore@v4
        with:
          path: addons/csound/bin
          key: macos-artifacts-release-${{github.run_id}}

      - name: Restore cached iOS artifacts (debug)
        uses: actions/cache/restore@v4
        with:
          path: addons/csound/bin
          key: ios-artifacts-debug-${{github.run_id}}

      - name: Restore cached iOS artifacts (release)
        uses: actions/cache/restore@v4
        with:
          path: addons/csound/bin
          key: ios-artifacts-release-${{github.run_id}}

      - name: Restore cached Android artifacts
        uses: actions/cache/restore@v4
        with:
          path: addons/csound/bin
          key: android-artifacts-${{github.run_id}}

      - name: Restore cached Web artifacts
        uses: actions/cache/restore@v4
        with:
          path: addons/csound/bin
          key: web-artifacts-${{github.run_id}}

      - name: Update minor version
        id: tag
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DRY_RUN: true
          RELEASE_BRANCHES: none

      - name: Remove soundfonts
        run: find addons | grep sf2 | xargs rm

      - name: Zip godot-csound artifact
        run: zip -r godot-csound_${{ env.TAG_VERSION }}.zip ./addons/csound
        env:
          TAG_VERSION: ${{ steps.tag.outputs.new_tag }}

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ github.token }}
          tag_name: ${{ env.TAG_VERSION }}
          generate_release_notes: true
          make_latest: true
          files: |
            godot-csound_${{ env.TAG_VERSION }}.zip
        env:
          TAG_VERSION: ${{ steps.tag.outputs.new_tag }}
